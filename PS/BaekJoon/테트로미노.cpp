#include <iostream>

using namespace std;

int tetromino[6][4][4][2] {
	// ㅁ block
	
	{
		// valid
		{ {0,0},{0,1},{1,0},{1,1} },
		
		// invalid
		{ {0,0},{0,1},{1,0},{1,1} },
		{ {0,0},{0,1},{1,0},{1,1} },
		{ {0,0},{0,1},{1,0},{1,1} },
	},
	
	// ㅡ block
	
	{
		// valid
		{ {0,0},{1,0},{2,0},{3,0} },
		{ {0,0},{0,1},{0,2},{0,3} },
		
		// invalid
		{ {0,0},{1,0},{2,0},{3,0} },
		{ {0,0},{0,1},{0,2},{0,3} },
	},
	
	// ㄴ block
	
	{
		{ {-2,0},{-1,0},{0,0},{0,1} },	
		{ {0,0},{0,1},{0,2},{1,0} },	
		{ {0,-1},{0,0},{1,0},{2,0} },	
		{ {-1,0},{0,0},{0,-2},{0,-1} },	
	},
	
	// ㄴ block 대칭
	
	{
		{ {-2,0},{-1,0},{0,0},{0,-1} },	
		{ {0,0},{0,1},{0,2},{-1,0} },	
		{ {0,1},{0,0},{1,0},{2,0} },	
		{ {1,0},{0,0},{0,-2},{0,-1} },	
	},
	
	{
		{ {-1,0},{0,0},{0,1},{1,1} },
		{ {0,-1},{0,0},{-1,0},{-1,1} },
		{ {-1,1},{0,1},{0,0},{1,0} },
		{ {0,-1},{0,0},{1,0},{1,1} },
	},
	
	{
		{ {0,0},{0,1},{-1,0},{1,0} },	
		{ {0,-1},{0,0},{0,1},{1,0} },	
		{ {0,0},{0,-1},{-1,0},{1,0} },	
		{ {0,0},{0,1},{0,-1},{-1,0} },	
	},
};

int a[501][501];
int n,m;
int ans=0;

void check(int x, int y, int kind, int direction) {
	int total=0;
	for(int k=0; k<4; k++) {
		int nx=x+tetromino[kind][direction][k][1];
		int ny=y+tetromino[kind][direction][k][0];
		
		if(0>nx || nx>=n || 0>ny || ny>=m) return;
		total+=a[nx][ny];
	}
	
	ans=max(ans,total);
}

int main() {
	cin>>n>>m;
	
	for(int i=0; i<n; i++) {
		for(int j=0; j<m; j++) cin>>a[i][j];
	}
	
	for(int i=0; i<n; i++) {
		for(int j=0; j<m; j++) {
			for(int k=0; k<6; k++) {
				for(int l=0; l<4; l++) {
					if(k==0 && l>0) break;
					if(k==1 && l>1) break;
					
					check(i,j,k,l);
				}
			}
		}
	}

	cout<<ans;

	return 0;
}

/*
INPUT:
5 5
1 2 3 4 5
5 4 3 2 1
2 3 4 5 6
6 5 4 3 2
1 2 1 2 1

OUTPUT:
19
*/
